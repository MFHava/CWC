
//          Copyright Michael Florian Hava 2012.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file ../../../LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#include <map>
#include "cwc.sample.fibonacci.h"
using namespace cwc::sample::fibonacci;
static_assert(std::is_base_of<::cwc::sample::fibonacci::generator, cwc::sample::fibonacci::generator$>::value, "Implementation 'cwc::sample::fibonacci::generator$' does not fulfill the requirements of component '::cwc::sample::fibonacci::generator'");

namespace {
	const std::map<::cwc::string_ref, ::cwc::intrusive_ptr<cwc::component>> cwc_factories{
		{cwc::sample::fibonacci::generator$::cwc_fqn(), cwc::make_intrusive<typename cwc::sample::fibonacci::generator$::cwc_component_factory>()}
	};

	const char * cwc_definition =
		"//! @brief CWC Sample \"Fibonacci Generator\"\n"
		"//! @author Michael Florian Hava\n"
		"bundle cwc::sample::fibonacci {\n"
		"	interface sequence {\n"
		"		auto calculate(::cwc::uint8 no) -> ::cwc::uint64;\n"
		"		void calculate(array_ref<::cwc::uint8> nos, array_ref<mutable ::cwc::uint64> results);\n"
		"	};\n"
		"\n"
		"	component generator : sequence {};\n"
		"\n"
		"	export generator;\n"
		"}\n"
	;
}
#include <cwc/internal/bundle.hpp>
