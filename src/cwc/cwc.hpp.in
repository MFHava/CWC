
//          Copyright Michael Florian Hava 2012.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file ../../LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#pragma once
#define CWC_HPP_HEADER_INCLUDED

#if defined(_MSC_VER)
	#include "cwc/config/msvc.hpp"
#elif defined(__GNUG__)
	#include "cwc/config/gcc.hpp"
#else
	#error "Unknown compiler!"
#endif

#define CWC_DO_STRINGIFY(str) #str
#define CWC_STRINGIFY(str) CWC_DO_STRINGIFY(str)

#if defined(CWC_AUTOLINK_SUPPORTED) && !defined(CWC_BUILDING) && defined(CWC_HOST)
	#ifdef CWC_AUTOLINK_DEBUG
		#define CWC_LIB_DEBUG "@CWC_LIB_DEBUG_POSTFIX@"
	#else
		#define CWC_LIB_DEBUG ""
	#endif

	#pragma comment(lib, "cwc-@CWC_VERSION@-" CWC_AUTOLINK_TOOLKIT CWC_LIB_DEBUG ".lib")

	#undef CWC_LIB_DEBUG
#endif

#undef CWC_DO_STRINGIFY
#undef CWC_STRINGIFY

#include <atomic>
#include <memory>
#include <cassert>
#include <cstdint>
#include <cstring>
#include <ostream>
#include <stdexcept>
#include <functional>
#include <type_traits>

//! @brief public API of C++ with Components
namespace cwc {
	//! @brief user defined literals
	namespace literals {}

	//! @brief internal implementation details
	//! @attention no member of this namespace is part of the public CWC API
	namespace internal {}
}

#include "public/types.hpp"

#include "internal/error_code.hpp"

#include "public/array.hpp"
#include "public/array_ref.hpp"
#include "public/optional.hpp"
#include "public/string_ref.hpp"
#include "public/intrusive_ptr.hpp"

#include "internal/type_list.hpp"
#include "internal/make_base_list.hpp"
#include "internal/call.hpp"
#include "internal/default_implementation_chaining.hpp"
#include "internal/cast_to_interface.hpp"

#include "public/component.hpp"
#include "public/enumerator.hpp"
#include "public/config_enumerators.hpp"
#include "public/context.hpp"
#include "public/default_implementations.hpp"

#include "internal/error_handling.hpp"